/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define QWERTY  1
#define LOWER   2
#define RAISE   3
#define ADJUST  4
#define LOCK    5

// :: ------------------------------------------------------------------------------------------------------------------

// :: The following characters do NOT break Caps Word (in addition to alphanumeric characters).
//    https://zmk.dev/docs/behaviors/caps-word
&caps_word {
        continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
};

/ {
        behaviors {
                // :: Enables Caps Word when key is tapped twice.
                lcword: tap_dance_0 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "LCAPS_WORD_TD";
                        tapping-term-ms = <200>;
                        bindings = <&kp LSHFT>, <&caps_word>
                };

                rcword: tap_dance_1 {
                        compatible = "zmk,behavior-tap-dance";
                        label = "RCAPS_WORD_TD";
                        tapping-term-ms = <200>;
                        bindings = <&kp RSHFT>, <&caps_word>
                };
        };


        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
&kp TAB         &kp Q           &kp W           &kp F           &kp P           &kp B           &kp J           &kp L           &kp U           &kp Y           &kp SEMI        &kp SQT
&mt LCTRL ESC   &kp A           &kp R           &kp S           &kp T           &kp G           &kp M           &kp N           &kp E           &kp I           &kp O           &kp RET
&lcword         &kp Z           &kp X           &kp C           &kp D           &kp V           &kp K           &kp H           &kp COMMA       &kp DOT         &kp FSLH        &rcword
                                                &kp LGUI        &mo LOWER       &kp BKSP        &kp SPC         &mo RAISE       &kp RALT
                        >;
                };

                qwerty_layer {
                        bindings = <
&trans          &kp Q           &kp W           &kp E           &kp R           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P           &trans          
&trans          &kp A           &kp S           &kp D           &kp F           &kp G           &kp H           &kp J           &kp K           &kp L           &kp SEMI        &trans          
&trans          &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &trans          &trans          &trans          &trans          
                                                &trans          &trans          &trans          &trans          &trans          &trans          
                        >;
                };

                lower_layer {
                        bindings = <
&trans          &kp SQT         &kp DQT         &kp CARET       &kp QMARK       &kp GRAVE       &kp LBKT        &kp LT          &kp EQUAL       &kp GT          &kp RBKT        &trans          
&trans          &kp EXCL        &kp AT_SIGN     &kp HASH        &kp DOLLAR      &kp PERCENT     &kp LBRC        &kp LPAR        &kp COLON       &kp RPAR        &kp RBRC        &trans             
&trans          &kp BACKSLASH   &kp TILDE       &kp PIPE        &kp AMPERSAND   &kp SEMI        &kp BACKSLASH   &kp ASTERISK    &kp MINUS       &kp PLUS        &kp UNDERSCORE  &trans             
                                                &trans          &trans          &trans          &trans          &trans          &trans          
                        >;
                };

                raise_layer {
                        bindings = <
&trans          &trans          &trans          &trans          &trans          &trans          &kp PAGE_UP     &kp HOME        &kp UP          &kp END         &trans          &trans          
&trans          &kp N1          &kp N2          &kp N3          &kp N4          &kp N5          &kp PAGE_DOWN   &kp LEFT        &kp DOWN        &kp RIGHT       &trans          &trans             
&trans          &kp N6          &kp N7          &kp N8          &kp N9          &kp N0          &kp BACKSLASH   &trans          &trans          &trans          &trans          &trans             
                                                &trans          &trans          &trans          &trans          &trans          &trans          
                        >;
                };

                adjust_layer {
                        bindings = <
&trans          &tog QWERTY     &kp C_MUTE      &kp C_VOL_DOWN  &kp C_VOL_UP    &trans          &trans          &kp C_BRI_DN    &kp C_BRI_UP    &trans          &trans          &trans          
&tog LOCK       &trans          &kp C_PREV      &kp C_PP        &kp C_NEXT      &trans          &kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp F6          
&trans          &trans          &trans          &trans          &trans          &trans          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11         &kp F12          
                                                &trans          &trans          &trans          &trans          &trans          &trans          
                        >;
                };

                // ::   [LOWER]+[RAISE]+[CTRL] toggles a soft lock (via the ADJUST layer), enabling the keymap below,
                //      effectively disabling all keypresses on the keyboard. This is handy, for example, when transporting the keyboard.
                //      NOTE that the [LOWER], [RAISE], and [CTRL] keys need to be `&trans` so it is still possible to unlock the keyboard.        
                //
                //      @see https://github.com/bcat/zmk-config/blob/8c92cdf5e93cbb2bd4357891794506e3495fea8d/config/corne.keymap#L89-L103
                lock_layer {
                        bindings = <
                        // :: TODO
&none           &none           &none           &none           &none           &none           &none           &none           &none           &none           &none           &none           
&trans          &none           &none           &none           &none           &none           &none           &none           &none           &none           &none           &none           
&none           &none           &none           &none           &none           &none           &none           &none           &none           &none           &none           &none           
                                                &none           &trans          &none           &none           &trans          &none           
                        >;
                };
        };

        conditional_layers {
                compatible = "zmk,conditional-layers";
                adjust_layer {
                        if-layers = <LOWER, RAISE>;
                        then-layer = <ADJUST>;
                };
        };
};
